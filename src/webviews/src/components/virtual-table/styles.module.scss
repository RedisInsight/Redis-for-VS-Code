$headerHeight: 44px;
$footerHeight: 18px;
$borderColor: var(--vscode-tree-tableColumnsBorder);

.grid {
  @apply overflow-auto #{!important};
}

.disableScroll {
  @apply overflow-y-hidden #{!important};
}

.progress {
  @apply z-[2];
}

.container {
  @apply relative h-full w-full;

  &.isResizing {
    @apply cursor-col-resize select-none;
  }
}

:global(.keys-tree__count) {
  @apply pl-2.5;
}

.table {
  @apply h-full overflow-x-auto overflow-y-hidden;

  :global {
    .ReactVirtualized__Table__headerRow {
      @apply cursor-default;
      border: 1px solid $borderColor;
    }
  }

  &.autoHeight {
    max-height: 100% !important;
    height: auto !important;

    display: flex;
    flex-direction: column;

    :global {
      .ReactVirtualized__Table__headerRow {
        @apply shrink-0;
      }

      .ReactVirtualized__Table__Grid {
        @apply flex-grow;
        height: auto !important;
      }
    }
  }

  .tableRowColumn {
    @apply m-0 #{!important};
  }

  .tableRowCell {
    @apply flex items-center box-border py-2 px-3.5 min-h-[43px];
  }

  .tableRow {
    @apply cursor-pointer;
    border-right: 1px solid $borderColor;

    & > div:first-of-type {
      border-left: 3px solid transparent;
    }
  }

  :global(.table-row-selected) {
    & > div:first-of-type {
      border-left: 3px solid transparent;
    }
  }

  .tableRowSelectable {
    @apply cursor-pointer;
  }
}

.headerColumn {
  @apply m-0 box-content #{!important};
  border-right: 1px solid $borderColor;

  &:last-of-type {
    @apply border-r-0;
  }
}

.headerCell {
  @apply flex overflow-hidden items-center p-2 whitespace-nowrap;
}

.headerButton {
  @apply flex items-center whitespace-nowrap w-full normal-case hover:underline focus:underline;
  min-height: $headerHeight;
}

.tableFooter {
  @apply w-full absolute p-2 flex items-center z-[1] -bottom-[38px];
  height: $footerHeight;
  & > div {
    @apply min-w-[100px] mr-2;
  }
}

.placeholder {
  @apply flex justify-center items-center p-3 h-full w-full whitespace-pre-wrap;
}

:global(.key-list-table) {
  @apply h-full;
}

:global(.key-details-table) {
  @apply relative;
  :global(.ReactVirtualized__Table__row) {
    font-size: 13px;

    &:global(.actions.singleAction) {
      .tableRowCell {
        @apply py-1 px-2 #{!important};
      }
    }

    &:last-of-type :global(.ReactVirtualized__Table__rowColumn) {
      border-bottom-color: transparent;
    }
  }
  :global(.ReactVirtualized__Table__headerRow) {
    border: 1px solid $borderColor !important;
  }
  :global(.ReactVirtualized__Table__rowColumn) {
    @apply box-content overflow-visible #{!important};
    border-right: 1px solid $borderColor;
    border-bottom: 1px solid $borderColor;

    &:last-of-type {
      border-right-color: transparent;
    }
  }

  :global(.ReactVirtualized__Table__Grid) {
    border: 1px solid $borderColor;
    @apply border-t-0;
  }

  .headerCell {
    padding: 18px 4px 18px 16px;
  }

  .tableRowColumn {
    @apply min-h-full;
  }

  .tableRowCell {
    @apply min-h-[42px];
  }

  .tableFooter {
    @apply hidden;
  }

  :global {
    .value-table-actions {
      @apply flex items-center;

      .editFieldBtn {
        @apply mr-2.5;
      }
    }

    .value-table-separate-border {
      @apply box-content
    }

  }
}

.loading {
  @apply opacity-0;
}

.loadingShow {
  @apply opacity-100;
}

.loading:after {
  content: " .";
  animation: dots 1s steps(5, end) infinite;
}

.resizeTrigger {
  @apply absolute h-full top-0 -right-1 cursor-col-resize w-[7px] z-[2];

  &:before {
    @apply block h-2 absolute top-[50%];
    content: '';
    width: 7px;
    border-left: 1px solid var(--vscode-foreground);
    border-right: 1px solid var(--vscode-foreground);

    transform: translateY(-50%);
  }
}

@keyframes dots {
  0%,
  20% {
    color: rgba(0, 0, 0, 0);
    text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);
  }
  40% {
    color: white;
    text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);
  }
  60% {
    text-shadow: 0.25em 0 0 white, 0.5em 0 0 rgba(0, 0, 0, 0);
  }
  80%,
  100% {
    text-shadow: 0.25em 0 0 white, 0.5em 0 0 white;
  }
}
